[server]
host = 0.0.0.0
port = 7125
max_upload_size = 1024
klippy_uds_address = ~/printer_data/comms/klippy.sock

[update_manager octoeverywhere]
type = git_repo
channel = beta
path = /home/pi/octoeverywhere
origin = https://github.com/QuinnDamerell/OctoPrint-OctoEverywhere.git
env = /home/pi/octoeverywhere-env/bin/python
requirements = requirements.txt
install_script = install.sh
managed_services = 
	octoeverywhere

[announcements]
subscriptions = 
	mainsail

[file_manager]
enable_object_processing = True

[authorization]
cors_domains = 
	https://my.mainsail.xyz
	http://my.mainsail.xyz
	http://*.local
	http://*.lan
trusted_clients = 
	10.0.0.0/8
	127.0.0.1
	127.0.0.0/8
	169.254.0.0/16
	172.16.0.0/12
	192.168.0.0/16
	FE80::/10
	::1/128

[octoprint_compat]

[history]

[update_manager]
refresh_interval = 168
enable_auto_refresh = True

[update_manager mainsail]
type = web
channel = stable
repo = mainsail-crew/mainsail
path = ~/mainsail

[update_manager mainsail-config]
type = git_repo
primary_branch = master
path = ~/mainsail-config
origin = https://github.com/mainsail-crew/mainsail-config.git
managed_services = klipper

[update_manager timelapse]
type = git_repo
primary_branch = main
path = ~/moonraker-timelapse
origin = https://github.com/mainsail-crew/moonraker-timelapse.git
managed_services = klipper moonraker

[timelapse]
output_path = ~/timelapse/
ffmpeg_binary_path = /usr/bin/ffmpeg

[update_manager crowsnest]
type = git_repo
path = ~/crowsnest
origin = https://github.com/mainsail-crew/crowsnest.git
managed_services = crowsnest
install_script = tools/pkglist.sh

[update_manager sonar]
type = git_repo
path = ~/sonar
origin = https://github.com/mainsail-crew/sonar.git
primary_branch = main
managed_services = sonar
install_script = tools/install.sh

[update_manager mobileraker]
type = git_repo
path = ~/mobileraker_companion
origin = https://github.com/Clon1998/mobileraker_companion.git
primary_branch = main
managed_services = mobileraker
virtualenv = ~/mobileraker-env
requirements = scripts/mobileraker-requirements.txt
install_script = scripts/install.sh

[update_manager Klipper-Adaptive-Meshing-Purging]
type = git_repo
channel = dev
path = ~/Klipper-Adaptive-Meshing-Purging
origin = https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging.git
managed_services = klipper
primary_branch = main

[update_manager KlipperScreen]
type = git_repo
path = /home/pi/KlipperScreen
origin = https://github.com/moggieuk/KlipperScreen-Happy-Hare-Edition.git
env = /home/pi/.KlipperScreen-env/bin/python
requirements = scripts/KlipperScreen-requirements.txt
install_script = scripts/KlipperScreen-install.sh
managed_services = KlipperScreen

[update_manager happy-hare]
type = git_repo
path = ~/Happy-Hare
origin = https://github.com/moggieuk/Happy-Hare.git
primary_branch = main
install_script = install.sh
managed_services = klipper

[mmu_server]
enable_file_preprocessor = True
enable_toolchange_next_pos = True

[update_manager led_effect]
type = git_repo
path = ~/klipper-led_effect
origin = https://github.com/julianschill/klipper-led_effect.git
is_system_service = False

[update_manager klipper-backup]
type = git_repo
path = ~/klipper-backup
origin = https://github.com/Staubgeborener/klipper-backup.git
managed_services = moonraker
primary_branch = main

[update_manager klipper_tmc_autotune]
type = git_repo
channel = dev
path = ~/klipper_tmc_autotune
origin = https://github.com/andrewmcgr/klipper_tmc_autotune.git
managed_services = klipper
primary_branch = main
install_script = install.sh

[update_manager klipper_auto_speed]
type = git_repo
path = ~/klipper_auto_speed
origin = https://github.com/anonoei/klipper_auto_speed.git
primary_branch = main
install_script = install.sh
managed_services = klipper

